# =======================================================================================================================
# Moving git head, refs and files to a previous commit
# =======================================================================================================================

  alias grh='git reset --hard [TAG_NAME|COMMIT_HASH]'

# =======================================================================================================================
  Remove Deleted Files From Git
# =======================================================================================================================

  for i in `git status | grep deleted | awk '{print $3}'`; do git rm $i; done

# =======================================================================================================================
  git difference between a branch and current branch
# =======================================================================================================================

  branch=$( git branch 2>/dev/null|grep -e ^* | tr -d \*\ )
  git log --oneline remotes/origin/master "^${branch}"

# =======================================================================================================================
# set up a local branch which tracks a remote branch.
# =======================================================================================================================

  git branch --track BRANCHNAME origin/REMOTEBRANCHNAME

# =======================================================================================================================
  Delete a tag in a remote git repository
# =======================================================================================================================

  git push origin :refs/tags/mytag

# =======================================================================================================================
  GIT ERROR - fixing Interactive rebase already started
# =======================================================================================================================

  git rebase -i --abort

# =======================================================================================================================
  Git: Remove file accidentally added to the repository.
# =======================================================================================================================
 
  # Note that you don't actually need a temporary branch, you can do this with a 'detached HEAD', 
  # but you need to take a note of the commit id generated by the 'git commit --amend' step to supply to the 'git rebase' 
  # command rather than  using  the temporary branch name.

  # create and check out a temporary branch at the location of the bad merge
  git checkout -b tmpfix <sha1-of-merge>

  # remove the incorrectly added file
  git rm somefile.orig

  # commit the amended merge
  git commit --amend

  # go back to the master branch
  git checkout master

  # replant the master branch onto the corrected merge
  git rebase tmpfix

  # delete the temporary branch
  git branch -d tmpfix

# -----------------------------------------------------------------------------------------------------------------------
  Without creating branch
# -----------------------------------------------------------------------------------------------------------------------

  # remove the incorrectly added file
  git rm somefile.orig

  # commit the amended merge
  git commit --amend

  # replant the master branch onto the corrected merge
  git rebase <sha1-of-merge>

# =======================================================================================================================
